--create database RIOT;

-- table to store all summoner information
create table `all_league_entry`(
    `id` int not null auto_increment unique key,
    `leagueId` varchar(255) comment 'league game ID',
    `queueType` varchar(255) comment 'game queue type. i.e. rank solo5x5',
    `tier` TINYTEXT comment 'rank tier. i.e. diamond',
    `rank` char(3) comment 'rank level. i.e. diamond IV',
    `summonerId` varchar(255) not null comment 'game user id',
    `summonerName` varchar(255) comment 'user name in the game',
    `leaguePoints` MEDIUMINT comment '',
    `wins` MEDIUMINT comment '',
    `losses` MEDIUMINT comment '',
    `veteran` TINYINT(1) comment '',
    `inactive` TINYINT(1) comment '',
    `freshBlood` TINYINT(1) comment '',
    `hotStreak` TINYINT(1) comment '',
    `accountId` varchar(255) not null comment 'user RIOT account id encrypted',
    `puuid` varchar(255) not null comment '',
    `summonerLevel` MEDIUMINT comment '',
    primary key(`accountId`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;
--alter table all_league_entry add constraint unique_account unique(`accountId`);
--alter table all_league_entry add id int not null auto_increment unique key;

-- table stores all the champions
create table `all_champion`(
    `id` int not null auto_increment unique key comment '',
    `version` varchar(10) comment 'current client version',
    `champion_id` varchar(255) not null comment 'champion name',
    `key`  SMALLINT not null comment 'champion id',
    `name` varchar(255) not null comment '',
    `tag1` varchar(20) not null comment 'champion tag',
    `tag2` varchar(20) not null comment '',
    `title` varchar(100) comment '',
    `hp` SMALLINT comment '',
    `hpperlevel` SMALLINT comment '',
    `mp` SMALLINT comment '',
    `mpperlevel` SMALLINT comment '',
    `movespeed` SMALLINT comment '',
    `armor` SMALLINT comment '',
    `armorperlevel` decimal(5,3) comment '',
    `spellblock` decimal(5,3) comment '',
    `spellblockperlevel` decimal(5,3) comment '',
    `attackrange` SMALLINT comment '',
    `hpregen` SMALLINT comment '',
    `hpregenperlevel` SMALLINT comment '',
    `mpregen` SMALLINT comment '',
    `mpregenperlevel` SMALLINT comment '',
    `crit` SMALLINT comment '',
    `critperlevel` SMALLINT comment '',
    `attackdamage` SMALLINT comment '',
    `attackdamageperlevel` SMALLINT comment '',
    `attackspeedperlevel` decimal(5,3) comment '',
    `attackspeed` decimal(5,3) comment '',
    primary key (`key`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- table to store matches
create table `match_list`(
	`id` int not null auto_increment comment '',
    `accountId` varchar(255) not null comment 'user RIOT account id',
    `gameId` BIGINT not null comment 'id that refers to a specific game',
    `role` varchar(100) comment '',
    `season` TINYINT comment '',
    `platformId` varchar(255) comment '',
    `champion` SMALLINT comment 'champion id',
    `queue` SMALLINT comment '',
    `lane` varchar(100) comment '',
    `timestamp` TIMESTAMP comment '',
    primary key(`gameId`),
    unique key (`id`),
    foreign key(`champion`) references all_champion(`key`),
    foreign key (`accountId`) references all_league_entry(`accountId`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- table stores the game data of a champion used in a game
-- one row in table match maps to 10 rows in champ_game_stat
create table `champ_game_stat`(
    `statId` int not null primary key,
    `gameId` int not null,
    `championId` SMALLINT,
    `spell1Id` SMALLINT not null,
    `spell2Id` SMALLINT not null,
    `item0` SMALLINT,
    `item1` SMALLINT,
    `item2` SMALLINT,
    `item3` SMALLINT,
    `item4` SMALLINT,
    `item5` SMALLINT,
    `item6` SMALLINT,
    `kills` SMALLINT,
    `deaths` SMALLINT,
    `assists` SMALLINT,
    `largestKillingSpree` SMALLINT,
    `largestMultiKill` SMALLINT,
    `killingSprees` SMALLINT,
    `longestTimeSpentLiving` SMALLINT,
    `doubleKills` SMALLINT,
    `tripleKills` SMALLINT,
    `quadraKills` SMALLINT,
    `pentaKills` SMALLINT,
    `unrealKills` SMALLINT,
    `totalDamageDealt` MEDIUMINT,
    `magicDamageDealt` MEDIUMINT,
    `physicalDamageDealt` MEDIUMINT,
    `trueDamageDealt` MEDIUMINT,
    `largestCriticalStrike` MEDIUMINT,
    `totalDamageDealtToChampions` MEDIUMINT,
    `magicDamageDealtToChampions` MEDIUMINT,
    `physicalDamageDealtToChampions` MEDIUMINT,
    `trueDamageDealtToChampions` MEDIUMINT,
    `totalHeal` MEDIUMINT,
    `totalUnitsHealed` MEDIUMINT,
    `damageSelfMitigated` MEDIUMINT,
    `damageDealtToObjectives` MEDIUMINT,
    `damageDealtToTurrets` MEDIUMINT,
    `visionScore` SMALLINT,
    `timeCCingOthers` SMALLINT,
    `totalDamageTaken` MEDIUMINT,
    `magicalDamageTaken` MEDIUMINT,
    `physicalDamageTaken` MEDIUMINT,
    `trueDamageTaken` MEDIUMINT,
    `goldEarned` MEDIUMINT,
    `goldSpent` MEDIUMINT,
    `turretKills` SMALLINT,
    `inhibitorKills` SMALLINT,
    `totalMinionsKilled` MEDIUMINT,
    `neutralMinionsKilled` SMALLINT,
    `neutralMinionsKilledTeamJungle` SMALLINT,
    `neutralMinionsKilledEnemyJungle` SMALLINT,
    `totalTimeCrowdControlDealt` MEDIUMINT,
    `champLevel` SMALLINT,
    `visionWardsBoughtInGame` SMALLINT,
    `sightWardsBoughtInGame` SMALLINT,
    `wardsPlaced` SMALLINT,
    `wardsKilled` SMALLINT,
    `firstBloodKill` TINYINT,
    `firstBloodAssist` TINYINT,
    `firstTowerKill` TINYINT,
    `firstTowerAssist` TINYINT,
    `firstInhibitorKill` TINYINT,
    `firstInhibitorAssist` TINYINT,
    foreign key(`championId`) references all_champion(`key`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- table stores a matches' game data in details
create table `match`(
    `id` int not null auto_increment unique key,
    `gameId` BIGINT not null primary key,
    `gameCreation` TIMESTAMP,
    `gameDuration` SMALLINT not null,
    `team1_win` TINYINT not null,
    `team1_firstBlood` TINYINT not null,
    `team1_firstTower` TINYINT not null,
    `team1_firstInhibitor` TINYINT not null,
    `team1_firstBaron` TINYINT not null,
    `team1_firstDragon` TINYINT not null,
    `team1_firstRiftHerald` TINYINT not null,
    `team1_towerKills` SMALLINT not null,
    `team1_inhibitorKills` SMALLINT not null,
    `team1_baronKills` SMALLINT not null,
    `team1_dragonKills` SMALLINT not null,
    `team1_vilemawKills` SMALLINT not null,
    `team1_riftHeraldKills` SMALLINT not null,
    `team1_dominionVictoryScore` SMALLINT not null,
    `team1_ban1` SMALLINT,
    `team1_ban2` SMALLINT,
    `team1_ban3` SMALLINT,
    `team1_ban4` SMALLINT,
    `team1_ban5` SMALLINT,
    `team1_champ1_championId` SMALLINT not null comment 'champion id',
    `team1_champ2_championId` SMALLINT not null comment 'champion id',
    `team1_champ3_championId` SMALLINT not null comment 'champion id',
    `team1_champ4_championId` SMALLINT not null comment 'champion id',
    `team1_champ5_championId` SMALLINT not null comment 'champion id',
    `team1_champ1_statId` int not null comment 'champion stats in the game',
    `team1_champ2_statId` int not null comment 'champion stats in the game',
    `team1_champ3_statId` int not null comment 'champion stats in the game',
    `team1_champ4_statId` int not null comment 'champion stats in the game',
    `team1_champ5_statId` int not null comment 'champion stats in the game',
    `team2_win` TINYINT not null,
    `team2_firstBlood` TINYINT not null,
    `team2_firstTower` TINYINT not null,
    `team2_firstInhibitor` TINYINT not null,
    `team2_firstBaron` TINYINT not null,
    `team2_firstDragon` TINYINT not null,
    `team2_firstRiftHerald` TINYINT not null,
    `team2_towerKills` SMALLINT not null,
    `team2_inhibitorKills` SMALLINT not null,
    `team2_baronKills` SMALLINT not null,
    `team2_dragonKills` SMALLINT not null,
    `team2_vilemawKills` SMALLINT not null,
    `team2_riftHeraldKills` SMALLINT not null,
    `team2_dominionVictoryScore` SMALLINT not null,
    `team2_ban1` SMALLINT,
    `team2_ban2` SMALLINT,
    `team2_ban3` SMALLINT,
    `team2_ban4` SMALLINT,
    `team2_ban5` SMALLINT,
    `team2_champ1_championId` SMALLINT not null comment 'champion id',
    `team2_champ2_championId` SMALLINT not null comment 'champion id',
    `team2_champ3_championId` SMALLINT not null comment 'champion id',
    `team2_champ4_championId` SMALLINT not null comment 'champion id',
    `team2_champ5_championId` SMALLINT not null comment 'champion id',
    `team2_champ1_statId` int not null comment 'champion stats in the game',
    `team2_champ2_statId` int not null comment 'champion stats in the game',
    `team2_champ3_statId` int not null comment 'champion stats in the game',
    `team2_champ4_statId` int not null comment 'champion stats in the game',
    `team2_champ5_statId` int not null comment 'champion stats in the game',
    foreign key(`team1_champ1_championId`) references all_champion(`key`),
    foreign key(`team1_champ2_championId`) references all_champion(`key`),
    foreign key(`team1_champ3_championId`) references all_champion(`key`),
    foreign key(`team1_champ4_championId`) references all_champion(`key`),
    foreign key(`team1_champ5_championId`) references all_champion(`key`),
    foreign key(`team2_champ1_championId`) references all_champion(`key`),
    foreign key(`team2_champ2_championId`) references all_champion(`key`),
    foreign key(`team2_champ3_championId`) references all_champion(`key`),
    foreign key(`team2_champ4_championId`) references all_champion(`key`),
    foreign key(`team2_champ5_championId`) references all_champion(`key`),
    foreign key(`team1_champ1_statId`) references champ_game_stat(`statId`),
    foreign key(`team1_champ2_statId`) references champ_game_stat(`statId`),
    foreign key(`team1_champ3_statId`) references champ_game_stat(`statId`),
    foreign key(`team1_champ4_statId`) references champ_game_stat(`statId`),
    foreign key(`team1_champ5_statId`) references champ_game_stat(`statId`),
    foreign key(`team2_champ1_statId`) references champ_game_stat(`statId`),
    foreign key(`team2_champ2_statId`) references champ_game_stat(`statId`),
    foreign key(`team2_champ3_statId`) references champ_game_stat(`statId`),
    foreign key(`team2_champ4_statId`) references champ_game_stat(`statId`),
    foreign key(`team2_champ5_statId`) references champ_game_stat(`statId`),
    foreign key(`gameId`) references match_list(`gameId`)
)ENGINE=InnoDB DEFAULT CHARSET=utf8;


